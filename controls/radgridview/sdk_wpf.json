[{"Name":"Row Alternation With RowStyleSelector","ExampleInfo":{"Name":"Row Alternation With RowStyleSelector","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\AlternationRowStyleSelector\\AlternationRowStyleSelector_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\AlternationRowStyleSelector\\Readme.md","DirectoryName":"AlternationRowStyleSelector","ExampleFileNames":["AlternationRowStyleSelector_WPF.csproj","AlternationRowStyle.cs","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/AlternationRowStyleSelector/","Description":"\r\nThis example demonstrates how to simulate row alternation with a RowStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/rowstyleselector.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/rowstyleselector.html","KeyWords":"Row Alternation With RowStyleSelector"},
{"Name":"Filter Editor With Autocomplete","ExampleInfo":{"Name":"Filter Editor With Autocomplete","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\AutoCompleteStringFilterEditor\\AutoCompleteStringFilterEditor_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\AutoCompleteStringFilterEditor\\Readme.md","DirectoryName":"AutoCompleteStringFilterEditor","ExampleFileNames":["AutoCompleteStringFilterEditor_WPF.csproj","App.xaml","App.xaml.cs","AutoCompleteFilterStringColumn.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/AutoCompleteStringFilterEditor/","Description":"This example demonstrates how you can extend a string column, so that its field filter editors have the auto-complete functionality. \r\nTo achieve this, a custom AutoCompleteFilterStringColumn is defined.\r\nWhen you open the FilteringControl for that column and start typing in any of the editors, an auto-complete dropdown will appear.","KeyWords":"Filter Editor With Autocomplete,  extend, column, field, functionality, filteringcontrol"},
{"Name":"Binding Columns From ViewModel","ExampleInfo":{"Name":"Binding Columns From ViewModel","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BindingColumnsFromViewModel\\BindingColumnsFromViewModel_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BindingColumnsFromViewModel\\Readme.md","DirectoryName":"BindingColumnsFromViewModel","ExampleFileNames":["BindingColumnsFromViewModel_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyColumnsBindingBehavior.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingColumnsFromViewModel/","Description":"This example demonstrates how to implement a custom attached behavior in order to bind columns from your ViewModel. You can check the code in MyColumnsBindingBehavior.cs.","KeyWords":"Binding Columns From ViewModel,  attached, behavior"},
{"Name":"Binding RowDetails Element Width","ExampleInfo":{"Name":"Binding RowDetails Element Width","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BindingRowDetailsElementWidth\\BindingRowDetailsElementWidth_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BindingRowDetailsElementWidth\\Readme.md","DirectoryName":"BindingRowDetailsElementWidth","ExampleFileNames":["BindingRowDetailsElementWidth_WPF.csproj","App.xaml","App.xaml.cs","BindingRowDetailsWidthBehavior.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs","WidthProxy.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingRowDetailsElementWidth/","Description":"This example demonstrates how to synchronize the width of the element defined in the RowDetailsTemplate to its parent in RadGridView using an attached behavior.","KeyWords":"Binding RowDetails Element Width,  synchronize, child, parent, attached, behavior"},
{"Name":"Binding SelectedItems From ViewModel","ExampleInfo":{"Name":"Binding SelectedItems From ViewModel","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BindingSelectedItemsFromViewModel\\BindingSelectedItemsFromViewModel_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BindingSelectedItemsFromViewModel\\Readme.md","DirectoryName":"BindingSelectedItemsFromViewModel","ExampleFileNames":["BindingSelectedItemsFromViewModel_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataContext.cs","MySelectedItemsBindingBehavior.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingSelectedItemsFromViewModel/","Description":"This example demonstrates how to implement a custom attached behavior in order to bind SelectedItems from and to your ViewModel.","KeyWords":"Binding SelectedItems From ViewModel,  custom, attached, behavior"},
{"Name":"Bound GridViewSelectColumn","ExampleInfo":{"Name":"Bound GridViewSelectColumn","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BoundSelectColumn\\BoundSelectColumn_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\BoundSelectColumn\\Readme.md","DirectoryName":"BoundSelectColumn","ExampleFileNames":["BoundSelectColumn_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BoundSelectColumn/","Description":"GridViewSelectColumn is bound internally to GridViewRow's IsSelected property. This example demonstrates how to bind GridViewRow's IsSelected property to a property of your business object.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-select-column.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-select-column.html","KeyWords":"Bound GridViewSelectColumn,  isselected, gridviewrow, property"},
{"Name":"Cascading Combobox Columns","ExampleInfo":{"Name":"Cascading Combobox Columns","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CascadingComboboxColumns\\CascadingComboboxColumns_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CascadingComboboxColumns\\Readme.md","DirectoryName":"CascadingComboboxColumns","ExampleFileNames":["CascadingComboboxColumns_WPF.csproj","App.xaml","App.xaml.cs","Locations.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CascadingComboboxColumns/","Description":"This example demonstrates a common scenario where entering data is a cascade of comboboxes, where the list in the next combo is populated after selecting a value in the previous one.","KeyWords":"Cascading Combobox Columns,  populate, selected, value, next, previous"},
{"Name":"CellStyleSelector","ExampleInfo":{"Name":"CellStyleSelector","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CellStyleSelector\\CustomCellStyleSelector_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CellStyleSelector\\Readme.md","DirectoryName":"CellStyleSelector","ExampleFileNames":["CustomCellStyleSelector_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","StadiumCapacityStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CellStyleSelector/","Description":"This example demonstrates how to style conditionally RadGridView cells using a CellStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/cell-style-selector.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/cell-style-selector.html","KeyWords":"CellStyleSelector,  condition"},
{"Name":"Cell Tooltip When GridViewCell Text Is Trimmed","ExampleInfo":{"Name":"Cell Tooltip When GridViewCell Text Is Trimmed","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CellTooltipWhenTextTrimmed\\CellTooltipWhenTextTrimmed_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CellTooltipWhenTextTrimmed\\Readme.md","DirectoryName":"CellTooltipWhenTextTrimmed","ExampleFileNames":["CellTooltipWhenTextTrimmed_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CellTooltipWhenTextTrimmed/","Description":"\nThis example demonstrates how you can conditionally show a Tooltip only when the text displayed in a GridViewCell has been trimmed.","KeyWords":"Cell Tooltip When GridViewCell Text Is Trimmed"},
{"Name":"Change Cell Background From ViewModel","ExampleInfo":{"Name":"Change Cell Background From ViewModel","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ChangeCellBackgroundFromViewModel\\ChangeCellBackgroundFromViewModel_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ChangeCellBackgroundFromViewModel\\Readme.md","DirectoryName":"ChangeCellBackgroundFromViewModel","ExampleFileNames":["ChangeCellBackgroundFromViewModel_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","StadiumCapacityStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ChangeCellBackgroundFromViewModel/","Description":"This example demonstrates how to change GridViewCell's background based on a condition involving a value of a property from your ViewModel.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/cell-style-selector.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/cell-style-selector.html","KeyWords":"Change Cell Background From ViewModel,  condition, cellstyleselector, property"},
{"Name":"Changing Themes Runtime","ExampleInfo":{"Name":"Changing Themes Runtime","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ChangingThemesRuntime\\ChangingThemesRuntime_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ChangingThemesRuntime\\Readme.md","DirectoryName":"ChangingThemesRuntime","ExampleFileNames":["ChangingThemesRuntime_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ChangingThemesRuntime/","Description":"This example demonstrates how to implement runtime change for all implicit themes. This is achieved by clearing the merged dictionaries from the application resources and merging the new resource dictionaries for the selected theme from the theme assemblies.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/styling-and-appearance/styling-apperance-themes-runtime.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/styling-and-appearance/styling-apperance-themes-runtime.html","KeyWords":"Changing Themes Runtime,  implicit"},
{"Name":"Close Filtering Popup","ExampleInfo":{"Name":"Close Filtering Popup","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CloseFilteringPopupFilterButton\\CloseFilteringPopupFilterButton_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CloseFilteringPopupFilterButton\\Readme.md","DirectoryName":"CloseFilteringPopupFilterButton","ExampleFileNames":["CloseFilteringPopupFilterButton_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyFilteringControl.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CloseFilteringPopupFilterButton/","Description":"This example demonstrates how to close the Filtering Popup on pressing the Filter button by creating a custom FilteringControl and overriding its OnApplyFilter method.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/how-to/howto-close-filtering-popup-on-pressing-the-filter-button.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/how-to/howto-close-filtering-popup-on-pressing-the-filter-button.html","KeyWords":"Close Filtering Popup,  filteringcontrol, onapplyfilter, button, press"},
{"Name":"Column Chooser","ExampleInfo":{"Name":"Column Chooser","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnChooser\\ColumnChooser_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnChooser\\Readme.md","DirectoryName":"ColumnChooser","ExampleFileNames":["ColumnChooser_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnChooser/","Description":"This example demonstrates how to implement custom column chooser in order to hide/show desired columns in RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel.html","KeyWords":"Column Chooser,  hide, show, desired"},
{"Name":"Column Selection","ExampleInfo":{"Name":"Column Selection","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnSelection\\ColumnSelection_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnSelection\\Readme.md","DirectoryName":"ColumnSelection","ExampleFileNames":["ColumnSelection_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnSelection/","Description":"This example demonstrates how to select all cells from a column by either clicking on its header or by using a checkbox in the header template.","KeyWords":"Column Selection,  click, checkbox, header, selectall, cells"},
{"Name":"Column Settings","ExampleInfo":{"Name":"Column Settings","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnSettings\\ColumnSettings_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnSettings\\Readme.md","DirectoryName":"ColumnSettings","ExampleFileNames":["ColumnSettings_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnSettings/","Description":"This example demonstrates usage of different column properties. You can use the configuration panel on the left to experiment with the different column settings.","KeyWords":"Column Settings,  properties"},
{"Name":"Columns Reorder Sync With ListBox","ExampleInfo":{"Name":"Columns Reorder Sync With ListBox","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnsReorderSyncWithListBox\\ColumnsReorderSyncWithListBox_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ColumnsReorderSyncWithListBox\\Readme.md","DirectoryName":"ColumnsReorderSyncWithListBox","ExampleFileNames":["ColumnsReorderSyncWithListBox_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnsReorderSyncWithListBox/","Description":"This example demonstrates how to reorder RadGridView's columns through drag and drop on a ListBox outside RadGridView.","KeyWords":"Columns Reorder Sync With ListBox,  synchronously, drag, drop"},
{"Name":"Combobox Column","ExampleInfo":{"Name":"Combobox Column","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ComboboxColumn\\ComboboxColumn_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ComboboxColumn\\Readme.md","DirectoryName":"ComboboxColumn","ExampleFileNames":["ComboboxColumn_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Pilot.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ComboboxColumn/","Description":"This example demonstrates how to configure GridViewComboBoxColumn by setting its ItemsSource property.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column","KeyWords":"Combobox Column,  gridviewcomboboxcolumn, itemssource, property, configure"},
{"Name":"Combobox Column Editable","ExampleInfo":{"Name":"Combobox Column Editable","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ComboboxColumnEditable\\ComboboxColumnEditable_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ComboboxColumnEditable\\Readme.md","DirectoryName":"ComboboxColumnEditable","ExampleFileNames":["ComboboxColumnEditable_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Pilot.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ComboboxColumnEditable/","Description":"This example demonstrates how use GridViewComboBoxColumn and allow the user to edit it and add new items to its ItemsSource. \r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column","KeyWords":"Combobox Column Editable,  gridviewcomboboxcolumn, add, items, itemssource"},
{"Name":"Combobox Column ItemsSource Binding and FilterMemberPath","ExampleInfo":{"Name":"Combobox Column ItemsSource Binding and FilterMemberPath","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ComboboxColumnItemsSourceBinding\\ComboboxColumnItemsSourceBinding_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ComboboxColumnItemsSourceBinding\\Readme.md","DirectoryName":"ComboboxColumnItemsSourceBinding","ExampleFileNames":["ComboboxColumnItemsSourceBinding_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Pilot.cs","Readme.md","Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ComboboxColumnItemsSourceBinding/","Description":"This example demonstrates how to configure GridViewComboBoxColumn with ItemsSourceBinding and FilterMemberPath properties in RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column","KeyWords":"Combobox Column ItemsSource Binding and FilterMemberPath,  gridviewcomboboxcolumn, configure, itemssourcebinding"},
{"Name":"Control Panel","ExampleInfo":{"Name":"Control Panel","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ControlPanel\\ControlPanel_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ControlPanel\\Readme.md","DirectoryName":"ControlPanel","ExampleFileNames":["ControlPanel_WPF.csproj","App.config","App.xaml","App.xaml.cs","Club.cs","IdentityConverter.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ControlPanel/","Description":"This example demonstrates how you can configure ControlPanelItems for RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel","KeyWords":"Control Panel,  items, controlpanelitems"},
{"Name":"Control Panel Events","ExampleInfo":{"Name":"Control Panel Events","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ControlPanelEvents\\ControlPanelEvents_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ControlPanelEvents\\Readme.md","DirectoryName":"ControlPanelEvents","ExampleFileNames":["ControlPanelEvents_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ControlPanelEvents/","Description":"This example demonstrates how to subscribe to events of ControlPanel's button.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel","KeyWords":"Control Panel Events,  subscribe, events, button"},
{"Name":"Copy Paste Functionality","ExampleInfo":{"Name":"Copy Paste Functionality","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CopyPasteFunctionality\\CopyPasteFunctionality_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CopyPasteFunctionality\\Readme.md","DirectoryName":"CopyPasteFunctionality","ExampleFileNames":["CopyPasteFunctionality_WPF.csproj","App.xaml","App.xaml.cs","GridViewClipboardContextMenu.cs","GridViewClipboardCustomBehavior.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","SampleData\\ProductsSampleDataSource.xaml","SampleData\\ProductsSampleDataSource.xaml.cs","SampleData\\ProductsSampleDataSource.xsd"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CopyPasteFunctionality/","Description":"This example demonstrates different copy/paste scenarios supported by RadGridView. You can configure ClipboardCopyMode and ClipboardPasteMode through a ContextMenu displayed on right click over the control.\r\nThere are also various additional options to be configured on the rightmost side of the window.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/clipboard/copying.html\r\nFor SL - https://docs.telerik.com/devtools/wpf/controls/radgridview/clipboard/pasting.html","KeyWords":"Copy Paste Functionality,  clipboardcopymode, clipboardpastemode, scenarios, contextmenu, configure, options"},
{"Name":"Custom Aggregate Function For Enumerable Property","ExampleInfo":{"Name":"Custom Aggregate Function For Enumerable Property","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomAggregateFunctionEnumerableProperty\\CustomAggregateFunctionEnumerableProperty_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomAggregateFunctionEnumerableProperty\\Readme.md","DirectoryName":"CustomAggregateFunctionEnumerableProperty","ExampleFileNames":["CustomAggregateFunctionEnumerableProperty_WPF.csproj","App_WPF.xaml","App_WPF.xaml.cs","Club.cs","CustomSumFunction.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Period.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomAggregateFunctionEnumerableProperty/","Description":"\r\nThis example demonstrates how to implement a custom aggregate function for an enumerable property of the underlying object.","KeyWords":"Custom Aggregate Function For Enumerable Property"},
{"Name":"Custom Column","ExampleInfo":{"Name":"Custom Column","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomColumn\\CustomColumn_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomColumn\\Readme.md","DirectoryName":"CustomColumn","ExampleFileNames":["CustomColumn_WPF.csproj","App.xaml","App.xaml.cs","GridViewPercentageColumn.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomColumn/","Description":"This example demonstrates how to implement custom column inherited from GridViewDataColumn. A custom progress column has been created by overriding GridViewDataColumn's CreateCellElement and CreateCellEditElement methods.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/add-button-column\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/add-button-column","KeyWords":"Custom Column,  gridviewdatacolumn, progress, createcellelement, createcelleditelement"},
{"Name":"Create Custom Column Editor","ExampleInfo":{"Name":"Create Custom Column Editor","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomColumnEditor\\CustomColumnEditor_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomColumnEditor\\Readme.md","DirectoryName":"CustomColumnEditor","ExampleFileNames":["CustomColumnEditor_WPF.csproj","App.xaml","App.xaml.cs","Captain.cs","Club.cs","CustomCaptainEditor.xaml","CustomCaptainEditor.xaml.cs","CustomColumn.cs","MainWindow.xaml","MainWindow.xaml.cs","MyConverter.cs","MyViewModel.cs","Position.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomColumnEditor/","Description":"This example demonstrates how you can create a custom column editor bound to specific properties of the business object.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/create-custom-column-editor\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/create-custom-column-editor","KeyWords":"Create Custom Column Editor,  properties, bound, createcellelement, createcelleditelement"},
{"Name":"Custom Column Filter Descriptor","ExampleInfo":{"Name":"Custom Column Filter Descriptor","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomColumnFilterDescriptor\\CustomColumnFilterDescriptor_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomColumnFilterDescriptor\\Readme.md","DirectoryName":"CustomColumnFilterDescriptor","ExampleFileNames":["CustomColumnFilterDescriptor_WPF.csproj","App.xaml","App.xaml.cs","Days.cs","FlagsEnumColumn.cs","FlagsEnumColumnFilterDescriptor.cs","MainWindow.xaml","MainWindow.xaml.cs","Person.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomColumnFilterDescriptor/","Description":"This example demonstrates how you can extend the stock ColumnFilterDescriptor in order to change the filtering expression that it generates. \r\nThis expression will be the one used for filtering by our data engine. \r\nThis example requires advanced knowledge of LINQ Expression Trees. \r\nYou can learn more about LINQ Expression Trees at http://msdn.microsoft.com/en-us/library/bb397951.aspx","KeyWords":"Custom Column Filter Descriptor,  linq, expression, trees, data, engine"},
{"Name":"Custom Filter Control","ExampleInfo":{"Name":"Custom Filter Control","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomFilterControl\\CustomFilterControl_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomFilterControl\\Readme.md","DirectoryName":"CustomFilterControl","ExampleFileNames":["CustomFilterControl_WPF.csproj","App.xaml","App.xaml.cs","FromDateToDateFilterControl.xaml","FromDateToDateFilterControl.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomFilterControl/","Description":"This example demonstrates how to create and apply a custom filtering control for a RadGridView column.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/how-to/howto-create-a-custom-field-filter-editor\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/how-to/howto-create-a-custom-field-filter-editor","KeyWords":"Custom Filter Control,  create, column"},
{"Name":"Custom Hierarchy Using RowDetails","ExampleInfo":{"Name":"Custom Hierarchy Using RowDetails","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomHierarchyUsingRowDetails\\CustomHierarchyUsingRowDetails_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomHierarchyUsingRowDetails\\Readme.md","DirectoryName":"CustomHierarchyUsingRowDetails","ExampleFileNames":["CustomHierarchyUsingRowDetails_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomHierarchyUsingRowDetails/","Description":"This example demonstrates how to implement custom hierarchy using RowDetails and GridViewToggleRowDetailsColumn.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/row-details/overview\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/row-details/overview","KeyWords":"Custom Hierarchy Using RowDetails,  gridviewtogglerowdetailscolumn, toggle, column"},
{"Name":"Custom Keyboard Command Provider","ExampleInfo":{"Name":"Custom Keyboard Command Provider","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomKeyboardCommandProvider\\CustomKeyboardCommandProvider_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\CustomKeyboardCommandProvider\\Readme.md","DirectoryName":"CustomKeyboardCommandProvider","ExampleFileNames":["CustomKeyboardCommandProvider_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","KeyboardCommandProvider.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomKeyboardCommandProvider/","Description":"This example demonstrates how to predefine the default KeyboardCommandProvider.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/commands/KeyboardCommandProvider\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/commands/KeyboardCommandProvider","KeyWords":"Custom Keyboard Command Provider,  define, override"},
{"Name":"Deferred Searching","ExampleInfo":{"Name":"Deferred Searching","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\DeferredSearching\\DeferredSearching_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\DeferredSearching\\Readme.md","DirectoryName":"DeferredSearching","ExampleFileNames":["DeferredSearching_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/DeferredSearching/","Description":"This example demonstrates how to implement deferred searching for your RadGridView. It makes use of the IsSearchingDeferred property.\r\n\r\nMore details can be found in our online help:\r\nhttps://docs.telerik.com/devtools/wpf/controls/radgridview/features/search-as-you-type#deferred-searching","KeyWords":"Deferred Searching,  issearchingdeferred, property"},
{"Name":"Case-InSensitive Distinct Values","ExampleInfo":{"Name":"Case-InSensitive Distinct Values","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\DistinctValuesFilteringCaseSensitivity\\DistinctValuesFilteringCaseSensitivity_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\DistinctValuesFilteringCaseSensitivity\\Readme.md","DirectoryName":"DistinctValuesFilteringCaseSensitivity","ExampleFileNames":["DistinctValuesFilteringCaseSensitivity_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/DistinctValuesFilteringCaseSensitivity/","Description":"This example demonstrates how to configure case insensitive distinct values in filter.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/how-to/howto-display-all-distinct-values.html#display-case-insensitive-distinct-values\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/how-to/howto-display-all-distinct-values.html#display-case-insensitive-distinct-values","KeyWords":"Case-InSensitive Distinct Values,  filter"},
{"Name":"Drag And Drop Within RadGridView","ExampleInfo":{"Name":"Drag And Drop Within RadGridView","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\DragDropWithLines\\DragDropWithLines_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\DragDropWithLines\\Readme.md","DirectoryName":"DragDropWithLines","ExampleFileNames":["DragDropWithLines_WPF.csproj","App.xaml","App.xaml.cs","DropIndicationDetails.cs","MainWindow.xaml","MainWindow.xaml.cs","MessageViewModel.cs","Readme.md","RowReorderBehavior.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/DragDropWithLines/","Description":"\r\nThis example demonstrates how to implement drag and drop within RadGridView, giving the user feedback where the dragged item will be dropped.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/dragdropmanager/how-to/howto-draganddrop-within-radgridview\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/dragdropmanager/how-to/howto-draganddrop-within-radgridview","KeyWords":"Drag And Drop Within RadGridView"},
{"Name":"Expand All RowDetails","ExampleInfo":{"Name":"Expand All RowDetails","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ExpandAllRowDetails\\ExpandAllRowDetails_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ExpandAllRowDetails\\Readme.md","DirectoryName":"ExpandAllRowDetails","ExampleFileNames":["ExpandAllRowDetails_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExpandAllRowDetails/","Description":"\r\nThis example demonstrates how to expand all RowDetails.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/row-details/overview\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/row-details/overview","KeyWords":"Expand All RowDetails"},
{"Name":"Export Multiple GridViews To One Document","ExampleInfo":{"Name":"Export Multiple GridViews To One Document","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ExportMultipleGridViewsToOneDocument\\ExportMultipleGridViewsToOneDocument_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ExportMultipleGridViewsToOneDocument\\Readme.md","DirectoryName":"ExportMultipleGridViewsToOneDocument","ExampleFileNames":["ExportMultipleGridViewsToOneDocument_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExportMultipleGridViewsToOneDocument/","Description":"This example demonstrates how you can utilize RadPdfProcessing and RadSpreadProcessing in order to export several RadGridView instances in a single document. It also shows how you can export RadGridView to a file on the file system.","KeyWords":"Export Multiple GridViews To One Document,  radpdfprocessing, radspreadprocessing, file, single"},
{"Name":"Export Paged Data To Excel","ExampleInfo":{"Name":"Export Paged Data To Excel","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ExportPagedDataExcel\\ExportPagedDataExcel_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ExportPagedDataExcel\\Readme.md","DirectoryName":"ExportPagedDataExcel","ExampleFileNames":["ExportPagedDataExcel_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExportPagedDataExcel/","Description":"\nThis example demonstrates how to export paged data to Excel.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/export/export-xlsx\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/export/export-xlsx","KeyWords":"Export Paged Data To Excel"},
{"Name":"Export Grid View To One XLSX or CSV Document","ExampleInfo":{"Name":"Export Grid View To One XLSX or CSV Document","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FastGridExportWithSpreadStreamProcessing\\FastGridExportWithSpreadStreamProcessing_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FastGridExportWithSpreadStreamProcessing\\Readme.md","DirectoryName":"FastGridExportWithSpreadStreamProcessing","ExampleFileNames":["FastGridExportWithSpreadStreamProcessing_WPF.csproj","App.config","App.xaml","App.xaml.cs","CellRange.cs","Club.cs","ExampleViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","Player.cs","Position.cs","Product.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FastGridExportWithSpreadStreamProcessing/","Description":"\nThis example demonstrates how you can utilize RadSpreadStreamProcessing in order to export RadGridView data in a single document.","KeyWords":"Export Grid View To One XLSX or CSV Document"},
{"Name":"Filter As You Type Inside ComboBox","ExampleInfo":{"Name":"Filter As You Type Inside ComboBox","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilterAsYouTypeGridViewInsideComboBox\\FilterAsYouTypeGridViewInsideComboBox_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilterAsYouTypeGridViewInsideComboBox\\Readme.md","DirectoryName":"FilterAsYouTypeGridViewInsideComboBox","ExampleFileNames":["FilterAsYouTypeGridViewInsideComboBox_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilterAsYouTypeGridViewInsideComboBox/","Description":"This example demonstrates how to implement filter-as-you-type for a RadGridView placed inside a RadComboBox.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html","KeyWords":"Filter As You Type Inside ComboBox,  incremental, search"},
{"Name":"Filter As You Type With FilterRow","ExampleInfo":{"Name":"Filter As You Type With FilterRow","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilterAsYouTypeWithFilterRow\\FilterAsYouTypeWithFilterRow_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilterAsYouTypeWithFilterRow\\Readme.md","DirectoryName":"FilterAsYouTypeWithFilterRow","ExampleFileNames":["FilterAsYouTypeWithFilterRow_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilterAsYouTypeWithFilterRow/","Description":"This example demonstrates how to search as you type in the FilterRow's TextBoxes.\r\n\r\nMore details can be found in our online help:\r\nWPF: https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html#filter-row\r\nSL: https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html#filter-row","KeyWords":"Filter As You Type With FilterRow,  incremental, search"},
{"Name":"Filtering On A Boolean Property","ExampleInfo":{"Name":"Filtering On A Boolean Property","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilteringBooleanProperty\\FilteringBooleanProperty_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilteringBooleanProperty\\Readme.md","DirectoryName":"FilteringBooleanProperty","ExampleFileNames":["FilteringBooleanProperty_WPF.csproj","App.xaml","App.xaml.cs","BooleanToYesNoConverter.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilteringBooleanProperty/","Description":"This example demonstrates how to show user-friendly text instead of True and False when filtering boolean property by using an IValueConverter.\r\n\r\nMore details can be found in our online help:\r\nWPF: https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nSL: https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html","KeyWords":"Filtering On A Boolean Property,  value, converter"},
{"Name":"States Of Filtering Buttons","ExampleInfo":{"Name":"States Of Filtering Buttons","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilteringButtonsStates\\FilteringButtonsStates_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilteringButtonsStates\\Readme.md","DirectoryName":"FilteringButtonsStates","ExampleFileNames":["FilteringButtonsStates_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyFilteringControl.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilteringButtonsStates/","Description":"This example demonstrates how to control the enabled and disabled state of the Filter and Close buttons in the FilterngControl.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html","KeyWords":"States Of Filtering Buttons,  filteringcontrol, enabled, disabled, close"},
{"Name":"Filtering Collection Properties","ExampleInfo":{"Name":"Filtering Collection Properties","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilteringCollectionProperties\\FilteringCollectionProperties_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\FilteringCollectionProperties\\Readme.md","DirectoryName":"FilteringCollectionProperties","ExampleFileNames":["FilteringCollectionProperties_WPF.csproj","App.xaml","App.xaml.cs","CollectionPropertyColumn.cs","CollectionPropertyColumnFilterDescriptor.cs","MainWindow.xaml","MainWindow.xaml.cs","Person.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilteringCollectionProperties/","Description":"This example demonstrates how you can extend the stock ColumnFilterDescriptor in order to filter collection properties.\r\nThis example requires advanced knowledge of LINQ Expression Trees. \r\nYou can learn more about LINQ Expression Trees at http://msdn.microsoft.com/en-us/library/bb397951.aspx.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html","KeyWords":"Filtering Collection Properties,  columnfilterdescriptor, linq, expression, trees"},
{"Name":"Modify ForegroundColor Of Selected Row","ExampleInfo":{"Name":"Modify ForegroundColor Of Selected Row","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ForegroundColorSelectedHoveredRow\\ForegroundColorSelectedHoveredRow_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ForegroundColorSelectedHoveredRow\\Readme.md","DirectoryName":"ForegroundColorSelectedHoveredRow","ExampleFileNames":["ForegroundColorSelectedHoveredRow_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ForegroundColorSelectedHoveredRow/","Description":"This example demonstrates how to modify the Foreground color of the selected/hovered row by modifying the default GridViewRow style.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/styling-and-appearance/styling-apperance-implicit-styles-overview\r\nhttps://docs.telerik.com/devtools/wpf/styling-and-appearance/styling-apperance-editing-control-templates\r\nFor SL - https://docs.telerik.com/devtools/silverlight/styling-and-appearance/styling-apperance-implicit-styles-overview\r\nhttps://docs.telerik.com/devtools/silverlight/styling-and-appearance/styling-apperance-editing-control-templates","KeyWords":"Modify ForegroundColor Of Selected Row,  hovered, gridviewrow, style, controltemplate"},
{"Name":"Group Selection","ExampleInfo":{"Name":"Group Selection","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\GroupSelection\\GroupSelection_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\GroupSelection\\Readme.md","DirectoryName":"GroupSelection","ExampleFileNames":["GroupSelection_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyBehavior.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/GroupSelection/","Description":"This example demonstrates how to implement an item selection on GroupRow level when using GridViewSelectColumn.","KeyWords":"Group Selection,  attached, behavior, checkbox, select, column"},
{"Name":"Hierarchy Expand Button StyleSelector","ExampleInfo":{"Name":"Hierarchy Expand Button StyleSelector","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\HierarchyExpandButtonStyleSelector\\HierarchyExpandButtonStyleSelector_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\HierarchyExpandButtonStyleSelector\\Readme.md","DirectoryName":"HierarchyExpandButtonStyleSelector","ExampleFileNames":["HierarchyExpandButtonStyleSelector_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyHierarchyExpandButtonStyleSelector.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/HierarchyExpandButtonStyleSelector/","Description":"This example demonstrates how you can use the HierarchyExpandButtonStyleSelector property of RadGridView to apply a different style to GridViewRow's hierarchy expand button based on some value.","KeyWords":"Hierarchy Expand Button StyleSelector,  hierarchy, expand, button, style, selector, styleselector"},
{"Name":"Custom Highlight Column","ExampleInfo":{"Name":"Custom Highlight Column","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\HighlightCustomColumn\\HighlightCustomColumn_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\HighlightCustomColumn\\Readme.md","DirectoryName":"HighlightCustomColumn","ExampleFileNames":["HighlightCustomColumn_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","HightlightColumn.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/HighlightCustomColumn/","Description":"This example demonstrates how to create a custom column and add a HighlightTextBlock element within it.","KeyWords":"Custom Highlight Column,  highlight, column, custom, textblock"},
{"Name":"Image Column Filtering","ExampleInfo":{"Name":"Image Column Filtering","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ImageColumnFiltering\\ImageColumnFiltering_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ImageColumnFiltering\\Readme.md","DirectoryName":"ImageColumnFiltering","ExampleFileNames":["ImageColumnFiltering_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","ImageFilterColumn.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ImageColumnFiltering/","Description":"This example demonstrates how to override GridViewImageColumn's distinct values to be images and not a string path.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/image-column.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/image-column.html","KeyWords":"Image Column Filtering,  gridviewimagecolumn, distinct, values"},
{"Name":"Lightweight GridViewComboBoxColumn","ExampleInfo":{"Name":"Lightweight GridViewComboBoxColumn","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LightweightComboBoxColumn\\LightweightComboBoxColumn_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LightweightComboBoxColumn\\Readme.md","DirectoryName":"LightweightComboBoxColumn","ExampleFileNames":["LightweightComboBoxColumn_WPF.csproj","App.xaml","App.xaml.cs","Converter.cs","CrossReference.cs","Item.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LightweightComboBoxColumn/","Description":"This example demonstrates how to configure a lightweight GridViewComboBoxColumn with validation.\r\nValidation rules:\r\n- ItemKey can not be 0\r\n- CustomerItem can not be empty\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column \r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column","KeyWords":"Lightweight GridViewComboBoxColumn,  validation"},
{"Name":"Lightweight Template For Cells","ExampleInfo":{"Name":"Lightweight Template For Cells","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LightweightTemplateForCells\\LightweightTemplateForCells_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LightweightTemplateForCells\\Readme.md","DirectoryName":"LightweightTemplateForCells","ExampleFileNames":["LightweightTemplateForCells_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyConverter.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LightweightTemplateForCells/","Description":"This example demonstrates how to implement custom lightweight template for GridViewCell.","KeyWords":"Lightweight Template For Cells,  gridviewcell, custom"},
{"Name":"Lightweight Templates","ExampleInfo":{"Name":"Lightweight Templates","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LightweightTemplates\\LightweightTemplates_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LightweightTemplates\\Readme.md","DirectoryName":"LightweightTemplates","ExampleFileNames":["LightweightTemplates_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LightweightTemplates/","Description":"This example demonstrates how to apply lightweight templates for RadGridView in order to limit the number of visual elements within the templates and speed up performance. \r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-lightweight-template.html","KeyWords":"Lightweight Templates,  apply, simplified, style, core"},
{"Name":"Locate Row As You Type","ExampleInfo":{"Name":"Locate Row As You Type","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LocateRowAsYouType\\LocateRowAsYouType_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\LocateRowAsYouType\\Readme.md","DirectoryName":"LocateRowAsYouType","ExampleFileNames":["LocateRowAsYouType_WPF.csproj","App.xaml","App.xaml.cs","books.xml","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LocateRowAsYouType/","Description":"This example demonstrates how to implement search-as-you-type functionality. The first row to match the search criteria is scrolled into view.","KeyWords":"Locate Row As You Type,  search, scroll, into, view, match, criteria"},
{"Name":"Merged Cells","ExampleInfo":{"Name":"Merged Cells","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\MergedCells\\MergedCells_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\MergedCells\\Readme.md","DirectoryName":"MergedCells","ExampleFileNames":["MergedCells_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","EmployeeService.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/MergedCells/","Description":"This example demonstrates how to merge cells. Each time you click on the \"Change Merge Direction\" button, the way the cells are merged will change. \r\nAs a result, all cells with equal values will be merged vertically or horizontally. \r\n\r\nMore details can be found in our online help:\r\nhttp://www.telerik.com/help/wpf/gridview-merged-cells.html","KeyWords":"Merged Cells,  merged, cells, horizontal, vertical"},
{"Name":"New Row Position","ExampleInfo":{"Name":"New Row Position","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\NewRowPosition\\NewRowPosition_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\NewRowPosition\\Readme.md","DirectoryName":"NewRowPosition","ExampleFileNames":["NewRowPosition_WPF.csproj","App.config","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/NewRowPosition/","Description":"\nThis example demonstrates how you can configure the NewRowPosition property of RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/rows/adding-rows.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/rows/adding-rows.html","KeyWords":"New Row Position"},
{"Name":"Print Preview With RadSpreadSheet","ExampleInfo":{"Name":"Print Preview With RadSpreadSheet","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\PrintPreviewWithSpreadsheet\\PrintPreviewWithSpreadsheet_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\PrintPreviewWithSpreadsheet\\Readme.md","DirectoryName":"PrintPreviewWithSpreadsheet","ExampleFileNames":["PrintPreviewWithSpreadsheet_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","PrintAndExportExtensions.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/PrintPreviewWithSpreadsheet/","Description":"\r\nThis example demonstrates how to implement PrintPreview functionality for RadGridView using the RadSpreadsheet control.","KeyWords":"Print Preview With RadSpreadSheet"},
{"Name":"Read Only Binding","ExampleInfo":{"Name":"Read Only Binding","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ReadOnlyBinding\\ReadOnlyBinding_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ReadOnlyBinding\\Readme.md","DirectoryName":"ReadOnlyBinding","ExampleFileNames":["ReadOnlyBinding_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ReadOnlyBinding/","Description":"This example demonstrates how to control which rows or cells to be read only by using read-only binding.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/read-only-rows-cells.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/read-only-rows-cells.html","KeyWords":"Read Only Binding,  rows, cells"},
{"Name":"Read-Only Style Selector","ExampleInfo":{"Name":"Read-Only Style Selector","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ReadOnlyStyleSelector\\ReadOnlyStyleSelector_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ReadOnlyStyleSelector\\Readme.md","DirectoryName":"ReadOnlyStyleSelector","ExampleFileNames":["ReadOnlyStyleSelector_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","ReadOnlyStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ReadOnlyStyleSelector/","Description":"This example demonstrates how to style Read-Only RadGridView cells using a CellStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/cell-style-selector.html\r\nhttps://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/read-only-rows-cells\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/cell-style-selector.html\r\nhttps://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/read-only-rows-cells","KeyWords":"Read-Only Style Selector,  cellstyleselector"},
{"Name":"Reusing ControlPanel Items","ExampleInfo":{"Name":"Reusing ControlPanel Items","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ReusingControlPanelItems\\ReusingControlPanelItems_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ReusingControlPanelItems\\Readme.md","DirectoryName":"ReusingControlPanelItems","ExampleFileNames":["ReusingControlPanelItems_WPF.csproj","App.config","App.xaml","App.xaml.cs","Club.cs","IdentityConverter.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ReusingControlPanelItems/","Description":"This example demonstrates how you can add a common Style targeting the ControlPanel that all the RadGridView controls in the application will inherit.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel.html#reusing-control-panel-items\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel.html#reusing-control-panel-items","KeyWords":"Reusing ControlPanel Items,  common, style, target, inherit"},
{"Name":"Row Details Template Selector","ExampleInfo":{"Name":"Row Details Template Selector","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\RowDetailsTemplateSelector\\RowDetailsTemplateSelector_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\RowDetailsTemplateSelector\\Readme.md","DirectoryName":"RowDetailsTemplateSelector","ExampleFileNames":["RowDetailsTemplateSelector_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyCustomRowDetailsTemplateSelector.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/RowDetailsTemplateSelector/","Description":"This example demonstrates how you can use the RowDetailsTemplateSelector property of RadGridView to apply different templates based on some value.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://www.telerik.com/help/wpf/gridview-template-selectors-overview.html\r\nFor SL - http://www.telerik.com/help/silverlight/gridview-template-selectors-overview.html","KeyWords":"Row Details Template Selector,  datatemplateselector"},
{"Name":"Expand / Collapse Row Details","ExampleInfo":{"Name":"Expand / Collapse Row Details","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\RowDetailsVisibilityOptions\\RowDetailsVisibilityOptions_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\RowDetailsVisibilityOptions\\Readme.md","DirectoryName":"RowDetailsVisibilityOptions","ExampleFileNames":["RowDetailsVisibilityOptions_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","ComboBoxSelectedItemToRowDetailsVisibilityModeConverter.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/RowDetailsVisibilityOptions/","Description":"This example demonstrates how to expand / collapse the RowDetails of the GridView by setting the RowDetailsVisibilityMode property or using the GridViewRowDetailsToggleColumn. \r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://www.telerik.com/help/wpf/radgridview-row-details-visibility.html   \r\nFor SL - http://www.telerik.com/help/silverlight/radgridview-row-details-visibility.html","KeyWords":"Expand / Collapse Row Details,  rowdetailsvisibilitymode, gridviewrowdetailstogglecolumn"},
{"Name":"Row Style Selector","ExampleInfo":{"Name":"Row Style Selector","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\RowStyleSelector\\CustomRowStyleSelector_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\RowStyleSelector\\Readme.md","DirectoryName":"RowStyleSelector","ExampleFileNames":["CustomRowStyleSelector_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","StadiumCapacityStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/RowStyleSelector/","Description":"This example demonstrates how to style conditionally RadGridView rows using a RowStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/rowstyleselector.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/rowstyleselector.html","KeyWords":"Row Style Selector,  condition"},
{"Name":"Scroll New Item Into View","ExampleInfo":{"Name":"Scroll New Item Into View","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ScrollIntoViewAsyncMvvm\\ScrollIntoViewAsyncMvvm_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ScrollIntoViewAsyncMvvm\\Readme.md","DirectoryName":"ScrollIntoViewAsyncMvvm","ExampleFileNames":["ScrollIntoViewAsyncMvvm_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyScrollIntoViewAsyncBehavior.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ScrollIntoViewAsyncMvvm/","Description":"This example demonstrates how to create an attached behavior, that allows you to scroll to the newly added item. \r\nIn order to do that ScrollIntoViewAsync method is invoked.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://www.telerik.com/help/wpf/gridview-scroll-item.html\r\nFor SL - http://www.telerik.com/help/silverlight/gridview-scroll-item.html","KeyWords":"Scroll New Item Into View,  asynchronous, attached, behavior, new, add, item"},
{"Name":"Scroll Two RadGridViews Simultaneously","ExampleInfo":{"Name":"Scroll Two RadGridViews Simultaneously","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ScrollTwoGridsSimultaneously\\ScrollTwoGridsSimultaneously_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ScrollTwoGridsSimultaneously\\Readme.md","DirectoryName":"ScrollTwoGridsSimultaneously","ExampleFileNames":["ScrollTwoGridsSimultaneously_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ScrollTwoGridsSimultaneously/","Description":"This example demonstrates how to synchronize the scrolling of two separate RadGridViews.","KeyWords":"Scroll Two RadGridViews Simultaneously,  synchronize"},
{"Name":"Select Single Item in Hierarchy","ExampleInfo":{"Name":"Select Single Item in Hierarchy","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SelectSingleItemHierarchy\\SelectSingleItemHierarchy_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SelectSingleItemHierarchy\\Readme.md","DirectoryName":"SelectSingleItemHierarchy","ExampleFileNames":["SelectSingleItemHierarchy_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SelectSingleItemHierarchy/","Description":"\r\nThis example demonstrates how to select a single item in a hierarchical RadGridView.","KeyWords":"Select Single Item in Hierarchy"},
{"Name":"Tooltip Showing Column's SortDirection","ExampleInfo":{"Name":"Tooltip Showing Column's SortDirection","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortDirectionTooltip\\SortDirectionTooltip_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortDirectionTooltip\\Readme.md","DirectoryName":"SortDirectionTooltip","ExampleFileNames":["SortDirectionTooltip_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortDirectionTooltip/","Description":"This example demonstrates how to add a Tooltip for GridViewDataColumn's header which shows its SortDirection.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/sorting/programmatic.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/sorting/programmatic.html","KeyWords":"Tooltip Showing Column's SortDirection,  gridviewdatacolumn, header"},
{"Name":"Sort Distinct Values","ExampleInfo":{"Name":"Sort Distinct Values","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortDistinctValues\\SortDistinctValues_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortDistinctValues\\Readme.md","DirectoryName":"SortDistinctValues","ExampleFileNames":["SortDistinctValues_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","CountryConverter.cs","MainWindow.xaml","MainWindow.xaml.cs","MyColumn.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortDistinctValues/","Description":"This example demonstrates how to sort the distinct values when an IValueConverter to the DataMemberBinding is applied.","KeyWords":"Sort Distinct Values,  distinctvalues, filter, sort"},
{"Name":"Sort Group By Aggregate","ExampleInfo":{"Name":"Sort Group By Aggregate","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortGroupByAggregate\\SortGroupByAggregate_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortGroupByAggregate\\Readme.md","DirectoryName":"SortGroupByAggregate","ExampleFileNames":["SortGroupByAggregate_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","SortingGroupDescriptor.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortGroupByAggregate/","Description":"This example demonstrates how to sort groups by defined aggregate functions. \r\nYou can press the two buttons below RadGridView to test different cases:\r\n -Sort by first aggregate\r\n -Sort by second aggregate\r\n \r\nNote: This example has lightweight templates applied for RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-lightweight-template.html","KeyWords":"Sort Group By Aggregate,  function, lightweight, templates"},
{"Name":"Sort Group By Different Property","ExampleInfo":{"Name":"Sort Group By Different Property","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortGroupByDifferentProperty\\SortGroupByDifferentProperty_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\SortGroupByDifferentProperty\\Readme.md","DirectoryName":"SortGroupByDifferentProperty","ExampleFileNames":["SortGroupByDifferentProperty_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortGroupByDifferentProperty/","Description":"This example demonstrates how to sort groups by a property different from the one on which RadGridView has been grouped. It handles RadGridView's Grouping event and creates a custom GroupDescriptor. \r\n\r\nNote: This example has lightweight templates applied for RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\nFor SL - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html","KeyWords":"Sort Group By Different Property,  groupdescriptor"},
{"Name":"Validation with IDataErrorInfo Interface","ExampleInfo":{"Name":"Validation with IDataErrorInfo Interface","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ValidationIDataErrorInfo\\ValidationIDataErrorInfo_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ValidationIDataErrorInfo\\Readme.md","DirectoryName":"ValidationIDataErrorInfo","ExampleFileNames":["ValidationIDataErrorInfo_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ValidationIDataErrorInfo/","Description":"\r\nThis example demonstrates how to perform validation with the IDataErrorInfo Interface.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/managing-data-validation.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/managing-data-validation.html","KeyWords":"Validation with IDataErrorInfo Interface"},
{"Name":"Validation With INotifyDataErrorInfo Interface","ExampleInfo":{"Name":"Validation With INotifyDataErrorInfo Interface","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ValidationINotifyDataErrorInfo\\ValidationINotifyDataErrorInfo_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\ValidationINotifyDataErrorInfo\\Readme.md","DirectoryName":"ValidationINotifyDataErrorInfo","ExampleFileNames":["ValidationINotifyDataErrorInfo_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","ViewModelBase.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ValidationINotifyDataErrorInfo/","Description":"This example demonstrates how to perform standard and dynamic validation with the INotifyDataErrorInfo Interface.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - https://docs.telerik.com/devtools/wpf/controls/radgridview/features/managing-data-validation.html\r\nFor SL - https://docs.telerik.com/devtools/silverlight/controls/radgridview/features/managing-data-validation.html","KeyWords":"Validation With INotifyDataErrorInfo Interface,  dynamic"},
{"Name":"Various Data Sources","ExampleInfo":{"Name":"Various Data Sources","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\VariousDataSources\\VariousDataSources_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\GridView\\VariousDataSources\\Readme.md","DirectoryName":"VariousDataSources","ExampleFileNames":["VariousDataSources_WPF.csproj","App.Config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyDataRow.cs","MyModel.cs","Northwind.edmx","Northwind1.Designer.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/VariousDataSources/","Description":"This example demonstrates how to bind RadGridView to different datasources.","KeyWords":"Various Data Sources,  bind"}]