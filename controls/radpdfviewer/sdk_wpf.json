[{"Name":"Change Scale Factor","ExampleInfo":{"Name":"Change Scale Factor","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\ChangeScaleFactor\\ChangeScaleFactor_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\ChangeScaleFactor\\Readme.md","DirectoryName":"ChangeScaleFactor","ExampleFileNames":["ChangeScaleFactor_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/ChangeScaleFactor/","Description":"The example demonstrates how to change the ScaleFactor of RadPdfViewer. In this case this is done in the DocumentChanged event and the set value will be used for each document shown in the viewer.","KeyWords":"Change Scale Factor,  zoom,in,out,code"},
{"Name":"Context Menu","ExampleInfo":{"Name":"Context Menu","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\ContextMenu\\ContextMenu_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\ContextMenu\\Readme.md","DirectoryName":"ContextMenu","ExampleFileNames":["ContextMenu_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/ContextMenu/","Description":"The example demonstrates how to wire a context menu to RadPdfViewer.","KeyWords":"Context Menu,  replace, inherit, modify"},
{"Name":"Custom Command Descriptor","ExampleInfo":{"Name":"Custom Command Descriptor","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomCommandDescriptor\\CustomCommandDescriptor_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomCommandDescriptor\\Readme.md","DirectoryName":"CustomCommandDescriptor","ExampleFileNames":["CustomCommandDescriptor_WPF.csproj","app.config","App.xaml","App.xaml.cs","CustomCommandDescriptors.cs","FitToWidthCommand.cs","MainWindow.xaml","MainWindow.xaml.cs","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/CustomCommandDescriptor/","Description":"\nThe example demonstrates how to add custom command descriptors.","KeyWords":"Custom Command Descriptor"},
{"Name":"Custom Decoder","ExampleInfo":{"Name":"Custom Decoder","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomDecoder\\CustomDecoder_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomDecoder\\Readme.md","DirectoryName":"CustomDecoder","ExampleFileNames":["CustomDecoder_WPF.csproj","App_WPF.xaml","App_WPF.xaml.cs","JpxDecoder.cs","MainWindow.xaml","MainWindow.xaml.cs","SampleData\\test.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/CustomDecoder/","Description":"This example demonstrates how you could implement a custom decoder using a third party library*, which decodes jpeg2000 images. \r\n\r\n* This software uses the FreeImage open source image library. See http://freeimage.sourceforge.net for details.\r\nFreeImage is used under the FIPL, version 1.0. The full version of the license can be found at http://freeimage.sourceforge.net/freeimage-license.txt","KeyWords":"Custom Decoder,  image,jpeg,jpg,2000,jpx"},
{"Name":"Custom Find Dialog","ExampleInfo":{"Name":"Custom Find Dialog","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomFindDialog\\CustomFindDialog_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomFindDialog\\readme.md","DirectoryName":"CustomFindDialog","ExampleFileNames":["CustomFindDialog_WPF.csproj","App.xaml","App.xaml.cs","FindDialog.xaml","FindDialog.xaml.cs","FindDialogViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","Commands\\FindCommandBase.cs","Commands\\FindNextCommand.cs","Commands\\FindPreviousCommand.cs","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/CustomFindDialog/","Description":"This example demonstrates how to create a custom find dialog for RadPdfViewer. The dialog can be invoked with the Ctrl+F shortcut.","KeyWords":"Custom Find Dialog,  replace, inherit, modify,search"},
{"Name":"Custom Presenter","ExampleInfo":{"Name":"Custom Presenter","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomPresenter\\CustomPresenter_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomPresenter\\readme.md","DirectoryName":"CustomPresenter","ExampleFileNames":["CustomPresenter_WPF.csproj","App.xaml","App.xaml.cs","CustomSinglePagePresenter.cs","MainWindow.xaml","MainWindow.xaml.cs","PresenterNames.cs","SinglePageInfo.cs","SinglePageLayoutManager.cs","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/CustomPresenter/","Description":"\nThis example demonstrates how to create and register a custom presenter for RadPdfViewer. When the buttons are clicked, the appropriate presenter is set.","KeyWords":"Custom Presenter"},
{"Name":"Custom Printing","ExampleInfo":{"Name":"Custom Printing","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomPrinting\\CustomPrinting_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\CustomPrinting\\Readme.md","DirectoryName":"CustomPrinting","ExampleFileNames":["CustomPrinting_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","printme.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/CustomPrinting/","Description":"\nThe example demonstrates how to print silently with given printer. When you specify a printer name, the printer with the provided name will print the provided document silently. If the printer with the chosen name is not found, the default printer is being used.","KeyWords":"Custom Printing"},
{"Name":"First Look","ExampleInfo":{"Name":"First Look","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\FirstLook\\FirstLook_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\FirstLook\\Readme.md","DirectoryName":"FirstLook","ExampleFileNames":["FirstLook_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/FirstLook/","Description":"The example demonstrates how to bind the commands of RadPdfViewer to a RadToolBar. It also shows how to load a file from Uri or Stream.","KeyWords":"First Look,  bind,command,toolbar,load,import,file,document,uri,stream"},
{"Name":"Localization","ExampleInfo":{"Name":"Localization","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\Localization\\Localization_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\Localization\\Readme.md","DirectoryName":"Localization","ExampleFileNames":["Localization_WPF.csproj","App_WPF.xaml","App_WPF.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","PdfViewerResources.Designer.cs","PdfViewerResources.resx"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/Localization/","Description":"This example shows how you can localize RadPdfViewer's UI.  The PdfViewerResources.resx file contains all localizable strings for the control.","KeyWords":"Localization,  language"},
{"Name":"Custom save command","ExampleInfo":{"Name":"Custom save command","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\PdfViewerCustomSaveCommand\\PdfViewerCustomSaveCommand_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\PdfViewerCustomSaveCommand\\Readme.md","DirectoryName":"PdfViewerCustomSaveCommand","ExampleFileNames":["PdfViewerCustomSaveCommand_WPF.csproj","app.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Commands\\CustomCommands.cs","Commands\\CustomOpenCommand.cs","Commands\\CustomSaveCommand.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/PdfViewerCustomSaveCommand/","Description":"This example shows how a custom save command can be created which allows users can save the file they have previewed.","KeyWords":"Custom save command,  file,custom,location"},
{"Name":"Pdf Viewer Toolbar With Glyphs","ExampleInfo":{"Name":"Pdf Viewer Toolbar With Glyphs","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\PdfViewerToolbarWithGlyphs\\PdfViewerToolbarWithGlyphs_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\PdfViewerToolbarWithGlyphs\\Readme.md","DirectoryName":"PdfViewerToolbarWithGlyphs","ExampleFileNames":["PdfViewerToolbarWithGlyphs_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","TelerikWebUI.ttf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/PdfViewerToolbarWithGlyphs/","Description":"This example demonstrates the use of glyphs from the TelerikWebUI font in RadToolbar, allowing color change of the buttons icons in different states.","KeyWords":"Pdf Viewer Toolbar With Glyphs,  foreground, binding, office2016, wpf"},
{"Name":"Thumbnails","ExampleInfo":{"Name":"Thumbnails","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\Thumbnails\\Thumbnails_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\PdfViewer\\Thumbnails\\Readme.md","DirectoryName":"Thumbnails","ExampleFileNames":["Thumbnails_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Resources.xaml","SampleData\\Sample.pdf"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PdfViewer/Thumbnails/","Description":"The example shows how to customize the look of RadPdfViewer by adding thumbnail functionality.","KeyWords":"Thumbnails,  pdf,page,tumbnail,menu,image"}]