[{"Name":"Add Close Button","ExampleInfo":{"Name":"Add Close Button","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\AddCloseButton\\AddCloseButton_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\AddCloseButton\\readme.md","DirectoryName":"AddCloseButton","ExampleFileNames":["AddCloseButton_WPF.csproj","App.config","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","TileViewCommandsExtension.cs","ViewModels\\DataItem.cs","ViewModels\\MainViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TileView/AddCloseButton/","Description":"This example demonstrates how to add custom close button that deletes an tile view item","KeyWords":"Add Close Button,  closingtileviewitems, delete, remove"},
{"Name":"Change Headers Background","ExampleInfo":{"Name":"Change Headers Background","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\ChangeHeadersBackground\\ChangeHeadersBackground_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\ChangeHeadersBackground\\readme.md","DirectoryName":"ChangeHeadersBackground","ExampleFileNames":["ChangeHeadersBackground_WPF.csproj","App.xaml","App.xaml.cs","ItemViewModel.cs","MainPage.xaml","MainPage.xaml.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TileView/ChangeHeadersBackground/","Description":"This project demonstrates how you can change the background color of the header of each item, corresponding to its current state in MVVM scenario.","KeyWords":"Change Headers Background,  color, databinding, mvvm, object, headerstyle, tileviewitemheader"},
{"Name":"Data Binding","ExampleInfo":{"Name":"Data Binding","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\DataBinding\\DataBinding_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\DataBinding\\readme.md","DirectoryName":"DataBinding","ExampleFileNames":["DataBinding_WPF.csproj","App.config","App.xaml","App.xaml.cs","BankViewModel.cs","CustomerAccount.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TileView/DataBinding/","Description":"This example demonstrates how you can data bind RadTileView.","KeyWords":"Data Binding,  databinding, mvvm"},
{"Name":"RestoredTiles to span multiple rows and columns","ExampleInfo":{"Name":"RestoredTiles to span multiple rows and columns","ProjectPath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\RestoredTilesToSpanMultipleRowsAndColumns\\RestoredTilesToSpanMultipleRowsAndColumns_WPF.csproj","ReadmePath":"C:\\Work\\WPF_Scrum\\Release\\SDK\\Examples\\TileView\\RestoredTilesToSpanMultipleRowsAndColumns\\readme.md","DirectoryName":"RestoredTilesToSpanMultipleRowsAndColumns","ExampleFileNames":["RestoredTilesToSpanMultipleRowsAndColumns_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MultipleRowsAndColumnsPanel.cs","readme.md","TileViewAttachedProperties.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TileView/RestoredTilesToSpanMultipleRowsAndColumns/","Description":"This example demonstrates how you can use attached properties to make the Tiles to span to multiple rows and columns.\nIt also allows the users to position the tiles on different rows/column.","KeyWords":"RestoredTiles to span multiple rows and columns,  multiple, rows, columns, tiles"}]