using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Windows;

#region radchart-populating-with-data-creating-chart-in-code-behind
using Telerik.Windows.Controls;
using Telerik.Windows.Controls.Charting;
#endregion

namespace WpfApplication1
{
	/// <summary>
	/// Interaction logic for App.xaml
	/// </summary>
	public partial class App : Application
	{
	}

#region radchart-populating-with-data-creating-chart-in-code-behind_0
private Telerik.Windows.Controls.RadChart CreateChart_DefaultView()
{
    Telerik.Windows.Controls.RadChart telerikChart = new Telerik.Windows.Controls.RadChart();
    return telerikChart;
}
#endregion

#region radchart-populating-with-data-creating-chart-in-code-behind_2
private Telerik.Windows.Controls.RadChart CreateChart_DefaultView()
{
    Telerik.Windows.Controls.RadChart telerikChart = new Telerik.Windows.Controls.RadChart();    //Chart Title
    telerikChart.DefaultView.ChartTitle.Content = "Year 2009";
    telerikChart.DefaultView.ChartTitle.HorizontalAlignment = HorizontalAlignment.Center;    return telerikChart;
}
#endregion

#region radchart-populating-with-data-creating-chart-in-code-behind_4
private Telerik.Windows.Controls.RadChart CreateChart_DefaultView()
{
    Telerik.Windows.Controls.RadChart telerikChart = new Telerik.Windows.Controls.RadChart();    //Chart Title
    telerikChart.DefaultView.ChartTitle.Content = "Year 2009";
    telerikChart.DefaultView.ChartTitle.HorizontalAlignment = HorizontalAlignment.Center;    //Chart Legend
    telerikChart.DefaultView.ChartLegend.UseAutoGeneratedItems = true;    return telerikChart;
}
#endregion

#region radchart-populating-with-data-creating-chart-in-code-behind_6
private Telerik.Windows.Controls.RadChart CreateChart_DefaultView()
{
    Telerik.Windows.Controls.RadChart telerikChart = new Telerik.Windows.Controls.RadChart();    //Chart Title
    telerikChart.DefaultView.ChartTitle.Content = "Year 2009";
    telerikChart.DefaultView.ChartTitle.HorizontalAlignment = HorizontalAlignment.Center;    //Chart Legend
    telerikChart.DefaultView.ChartLegend.UseAutoGeneratedItems = true;    //Line Chart
    DataSeries lineSeries = new DataSeries();
    lineSeries.LegendLabel = "Turnover";
    lineSeries.Definition = new LineSeriesDefinition();    telerikChart.DefaultView.ChartArea.DataSeries.Add( lineSeries );    //Bar Chart
    DataSeries barSeries = new DataSeries();
    barSeries.LegendLabel = "Expenses";    telerikChart.DefaultView.ChartArea.DataSeries.Add( barSeries );    return telerikChart;
}
#endregion

#region radchart-populating-with-data-creating-chart-in-code-behind_8
private Telerik.Windows.Controls.RadChart CreateChart_DefaultView()
{
    Telerik.Windows.Controls.RadChart telerikChart = new Telerik.Windows.Controls.RadChart();    //Chart Title
    telerikChart.DefaultView.ChartTitle.Content = "Year 2009";
    telerikChart.DefaultView.ChartTitle.HorizontalAlignment = HorizontalAlignment.Center;    //Chart Legend
    telerikChart.DefaultView.ChartLegend.UseAutoGeneratedItems = true;    //Line Chart
    DataSeries lineSeries = new DataSeries();
    lineSeries.LegendLabel = "Turnover";
    lineSeries.Definition = new LineSeriesDefinition();    lineSeries.Add( new DataPoint(){ YValue = 154, XCategory = "Jan" } );
    lineSeries.Add( new DataPoint(){ YValue = 138, XCategory = "Feb" } );
    lineSeries.Add( new DataPoint(){ YValue = 143, XCategory = "Mar" } );
    lineSeries.Add( new DataPoint(){ YValue = 120, XCategory = "Apr" } );
    lineSeries.Add( new DataPoint(){ YValue = 135, XCategory = "May" } );
    lineSeries.Add( new DataPoint(){ YValue = 125, XCategory = "Jun" } );
    lineSeries.Add( new DataPoint(){ YValue = 179, XCategory = "Jul" } );
    lineSeries.Add( new DataPoint(){ YValue = 170, XCategory = "Aug" } );
    lineSeries.Add( new DataPoint(){ YValue = 198, XCategory = "Sep" } );
    lineSeries.Add( new DataPoint(){ YValue = 187, XCategory = "Oct" } );
    lineSeries.Add( new DataPoint(){ YValue = 193, XCategory = "Nov" } );
    lineSeries.Add( new DataPoint(){ YValue = 176, XCategory = "Dec" } );    telerikChart.DefaultView.ChartArea.DataSeries.Add( lineSeries );    //Bar Chart
    DataSeries barSeries = new DataSeries();
    barSeries.LegendLabel = "Expenses";
    barSeries.Definition = new BarSeriesDefinition();    barSeries.Add( new DataPoint(){ YValue = 45, XCategory = "Jan" } );
    barSeries.Add( new DataPoint(){ YValue = 48, XCategory = "Feb" } );
    barSeries.Add( new DataPoint(){ YValue = 53, XCategory = "Mar" } );
    barSeries.Add( new DataPoint(){ YValue = 41, XCategory = "Apr" } );
    barSeries.Add( new DataPoint(){ YValue = 32, XCategory = "May" } );
    barSeries.Add( new DataPoint(){ YValue = 28, XCategory = "Jun" } );
    barSeries.Add( new DataPoint(){ YValue = 63, XCategory = "Jul" } );
    barSeries.Add( new DataPoint(){ YValue = 74, XCategory = "Aug" } );
    barSeries.Add( new DataPoint(){ YValue = 77, XCategory = "Sep" } );
    barSeries.Add( new DataPoint(){ YValue = 85, XCategory = "Oct" } );
    barSeries.Add( new DataPoint(){ YValue = 89, XCategory = "Nov" } );
    barSeries.Add( new DataPoint(){ YValue = 80, XCategory = "Dec" } );    telerikChart.DefaultView.ChartArea.DataSeries.Add( barSeries );    return telerikChart;
}
#endregion

#region radchart-populating-with-data-creating-chart-in-code-behind_10
RadChart telerikChart = new RadChart();
Grid grid = new Grid();
grid.RowDefinitions.Add( new RowDefinition() { Height = new GridLength( 25, GridUnitType.Auto ) } );
grid.RowDefinitions.Add( new RowDefinition() );
grid.ColumnDefinitions.Add( new ColumnDefinition() );
grid.ColumnDefinitions.Add( new ColumnDefinition() );
grid.ColumnDefinitions.Add( new ColumnDefinition() { Width = new GridLength(100, GridUnitType.Auto) } );
telerikChart.UseDefaultLayout = false;
telerikChart.Content = grid;//Monthly Sales for 2009
//Chart Title
ChartTitle monthlySalesTitle = new ChartTitle();
monthlySalesTitle.Content = "Monthly Sales for 2009";
monthlySalesTitle.HorizontalAlignment = HorizontalAlignment.Center;
grid.Children.Add( monthlySalesTitle );//Chart Area
ChartArea monthlySalesChart = new ChartArea();
Grid.SetRow( monthlySalesChart, 1 );
grid.Children.Add( monthlySalesChart );
DataSeries monthlySalesDataSeries = new DataSeries();
monthlySalesDataSeries.Definition = new BarSeriesDefinition();monthlySalesDataSeries.Add( new DataPoint() { YValue = 38, XCategory = "Jan" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 65, XCategory = "Feb" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 30, XCategory = "Mar" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 63, XCategory = "Apr" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 98, XCategory = "May" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 47, XCategory = "Jun" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 91, XCategory = "Jul" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 99, XCategory = "Aug" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 32, XCategory = "Sep" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 77, XCategory = "Oct" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 62, XCategory = "Nov" } );
monthlySalesDataSeries.Add( new DataPoint() { YValue = 38, XCategory = "Dec" } );monthlySalesChart.DataSeries.Add( monthlySalesDataSeries );//Sales Per Manufacturer
//Chart Title
ChartTitle perManufacturerTitle = new ChartTitle();
perManufacturerTitle.Content = "Sales per Manufacturer";
perManufacturerTitle.HorizontalAlignment = HorizontalAlignment.Center;
Grid.SetColumn( perManufacturerTitle, 1 );
grid.Children.Add( perManufacturerTitle );//Chart Legend
ChartLegend legend = new ChartLegend();
legend.UseAutoGeneratedItems = true;
legend.Header = string.Empty;
legend.Name = "ChartLegendManufacturers";
Grid.SetColumn( legend, 2 );
Grid.SetRow( legend, 1 );
grid.Children.Add( legend );//Chart Area
ChartArea perManufacturerChart = new ChartArea();
perManufacturerChart.LegendName = "ChartLegendManufacturers";
Grid.SetRow( perManufacturerChart, 1 );
Grid.SetColumn( perManufacturerChart, 1 );
grid.Children.Add( perManufacturerChart );DataSeries perManufacturerDataSeries = new DataSeries();
perManufacturerDataSeries.Definition = new DoughnutSeriesDefinition();
perManufacturerDataSeries.Definition.ItemLabelFormat = "p";
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.215208267, LegendLabel = "Toyota" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.192960612, LegendLabel = "General Motors" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.151830229, LegendLabel = "Volkswagen" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.125964366, LegendLabel = "Ford" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.091152353, LegendLabel = "Honda" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.079093251, LegendLabel = "Nissan" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.079093251, LegendLabel = "PSA" } );
perManufacturerDataSeries.Add( new DataPoint() { YValue = 0.064697675, LegendLabel = "Hyundai" } );perManufacturerChart.DataSeries.Add( perManufacturerDataSeries );
this.LayoutRoot.Children.Add( telerikChart );
#endregion
}
